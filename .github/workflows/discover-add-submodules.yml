name: Discover & Add New Submodules

on:
  push:
    branches:
      - main
  workflow_dispatch: {}
  schedule:
    - cron: '0 3 * * *'

permissions:
  contents: write

jobs:
  discover-and-add:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout workspace
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      - name: Configure Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Ensure .gitmodules exists
        run: |
          if [ ! -f .gitmodules ]; then
            echo "# Git submodules configuration" > .gitmodules
            git add .gitmodules
            git commit -m "chore: initialize .gitmodules" || echo "nothing to commit"
          fi

      - name: Install gh & jq
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: Authenticate GH CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh auth setup-git

      - name: Fetch all repos for owner (${{ github.repository_owner }})
        id: list
        run: |
          gh repo list ${{ github.repository_owner }} --limit 200 --json name,sshUrl \
            | jq -r '.[] | "\(.name) \(.sshUrl)"' > all_repos.txt
          echo "---- all_repos.txt ----"
          head -n 10 all_repos.txt
          echo "------------------------"

      - name: Read existing submodules
        id: existing
        run: |
          grep '^\[submodule ' .gitmodules \
            | sed -E 's/\[submodule "(.+)"\]/\1/' > existing.txt || echo "" > existing.txt
          echo "---- existing.txt ----"
          cat existing.txt
          echo "----------------------"

      - name: Add any new submodules
        id: add
        run: |
          added=false
          while read -r name url; do
            echo "Considering: $name"
            if [[ "$name" == "${{ github.event.repository.name }}" ]]; then
              echo "  ❌ Skipping self: $name"
              continue
            fi
            if grep -Fxq "$name" existing.txt; then
              echo "  ➡️ Already tracked: $name"
            else
              echo "  ✅ Adding submodule: $name"
              git submodule add --branch main "$url" "$name"
              sed -i "/path = $name/a\\    ignore = all" .gitmodules
              added=true
            fi
          done < all_repos.txt
          echo "added=$added" >> $GITHUB_OUTPUT

      - name: Sort .gitmodules entries
        if: steps.add.outputs.added == 'true'
        run: |
          awk 'BEGIN{RS=""; ORS="\n\n"} {print}' .gitmodules \
            | sort -t '"' -k2 > .gitmodules.sorted
          mv .gitmodules.sorted .gitmodules

      - name: Commit & push
        if: steps.add.outputs.added == 'true'
        run: |
          git add .gitmodules
          git commit -m "chore: auto-add new submodules and sort entries"
          git push origin main

      - name: No new submodules
        if: steps.add.outputs.added == 'false'
        run: echo "✅ No new repositories to add as submodules."